//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("XERPModel", "FK_Addresses_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.Address), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_Plants_Addresses", "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.WarehouseDAL.Address), "Plants", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.Plant), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_Warehouses_Addresses1", "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.WarehouseDAL.Address), "Warehouses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.Warehouse), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_Plants_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "Plants", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.Plant), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_UdList_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "UdLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.UdList), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_UdListItem_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "UdListItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.UdListItem), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseCode_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "WarehouseCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseCode), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocationBinCode_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "WarehouseLocationBinCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationBinCode), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocationBins_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "WarehouseLocationBins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationBin), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocationBinType_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "WarehouseLocationBinTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationBinType), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocationCode_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "WarehouseLocationCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationCode), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocations_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "WarehouseLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocation), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocationType_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "WarehouseLocationTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationType), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_Warehouses_Companies1", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "Warehouses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.Warehouse), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseType_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Company), "WarehouseTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseType), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_Warehouses_Plants", "Plants", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Plant), "Warehouses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.Warehouse), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_UdListItem_UdList", "UdLists", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.UdList), "UdListItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.UdListItem), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_Warehouses_WarehouseCodes", "WarehouseCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseCode), "Warehouses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.Warehouse), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocationBins_WarehouseLocationBinCodes", "WarehouseLocationBinCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationBinCode), "WarehouseLocationBins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationBin), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocationBins_WarehouseLocationBinTypes", "WarehouseLocationBinTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationBinType), "WarehouseLocationBins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationBin), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocationBins_WarehouseLocations", "WarehouseLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocation), "WarehouseLocationBins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationBin), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocations_WarehouseLocationCodes", "WarehouseLocationCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationCode), "WarehouseLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocation), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocations_WarehouseLocationTypes", "WarehouseLocationTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocationType), "WarehouseLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocation), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_WarehouseLocations_Warehouses", "Warehouses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.WarehouseDAL.Warehouse), "WarehouseLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseLocation), true)]
[assembly: EdmRelationshipAttribute("XERPModel", "FK_Warehouses_WarehouseTypes", "WarehouseTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.WarehouseDAL.WarehouseType), "Warehouses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.WarehouseDAL.Warehouse), true)]

#endregion

namespace XERP.Server.DAL.WarehouseDAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WarehouseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WarehouseEntities object using the connection string found in the 'WarehouseEntities' section of the application configuration file.
        /// </summary>
        public WarehouseEntities() : base("name=WarehouseEntities", "WarehouseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WarehouseEntities object.
        /// </summary>
        public WarehouseEntities(string connectionString) : base(connectionString, "WarehouseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WarehouseEntities object.
        /// </summary>
        public WarehouseEntities(EntityConnection connection) : base(connection, "WarehouseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Plant> Plants
        {
            get
            {
                if ((_Plants == null))
                {
                    _Plants = base.CreateObjectSet<Plant>("Plants");
                }
                return _Plants;
            }
        }
        private ObjectSet<Plant> _Plants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UdListItem> UdListItems
        {
            get
            {
                if ((_UdListItems == null))
                {
                    _UdListItems = base.CreateObjectSet<UdListItem>("UdListItems");
                }
                return _UdListItems;
            }
        }
        private ObjectSet<UdListItem> _UdListItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UdList> UdLists
        {
            get
            {
                if ((_UdLists == null))
                {
                    _UdLists = base.CreateObjectSet<UdList>("UdLists");
                }
                return _UdLists;
            }
        }
        private ObjectSet<UdList> _UdLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarehouseCode> WarehouseCodes
        {
            get
            {
                if ((_WarehouseCodes == null))
                {
                    _WarehouseCodes = base.CreateObjectSet<WarehouseCode>("WarehouseCodes");
                }
                return _WarehouseCodes;
            }
        }
        private ObjectSet<WarehouseCode> _WarehouseCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarehouseLocationBinCode> WarehouseLocationBinCodes
        {
            get
            {
                if ((_WarehouseLocationBinCodes == null))
                {
                    _WarehouseLocationBinCodes = base.CreateObjectSet<WarehouseLocationBinCode>("WarehouseLocationBinCodes");
                }
                return _WarehouseLocationBinCodes;
            }
        }
        private ObjectSet<WarehouseLocationBinCode> _WarehouseLocationBinCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarehouseLocationBin> WarehouseLocationBins
        {
            get
            {
                if ((_WarehouseLocationBins == null))
                {
                    _WarehouseLocationBins = base.CreateObjectSet<WarehouseLocationBin>("WarehouseLocationBins");
                }
                return _WarehouseLocationBins;
            }
        }
        private ObjectSet<WarehouseLocationBin> _WarehouseLocationBins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarehouseLocationBinType> WarehouseLocationBinTypes
        {
            get
            {
                if ((_WarehouseLocationBinTypes == null))
                {
                    _WarehouseLocationBinTypes = base.CreateObjectSet<WarehouseLocationBinType>("WarehouseLocationBinTypes");
                }
                return _WarehouseLocationBinTypes;
            }
        }
        private ObjectSet<WarehouseLocationBinType> _WarehouseLocationBinTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarehouseLocationCode> WarehouseLocationCodes
        {
            get
            {
                if ((_WarehouseLocationCodes == null))
                {
                    _WarehouseLocationCodes = base.CreateObjectSet<WarehouseLocationCode>("WarehouseLocationCodes");
                }
                return _WarehouseLocationCodes;
            }
        }
        private ObjectSet<WarehouseLocationCode> _WarehouseLocationCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarehouseLocation> WarehouseLocations
        {
            get
            {
                if ((_WarehouseLocations == null))
                {
                    _WarehouseLocations = base.CreateObjectSet<WarehouseLocation>("WarehouseLocations");
                }
                return _WarehouseLocations;
            }
        }
        private ObjectSet<WarehouseLocation> _WarehouseLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarehouseLocationType> WarehouseLocationTypes
        {
            get
            {
                if ((_WarehouseLocationTypes == null))
                {
                    _WarehouseLocationTypes = base.CreateObjectSet<WarehouseLocationType>("WarehouseLocationTypes");
                }
                return _WarehouseLocationTypes;
            }
        }
        private ObjectSet<WarehouseLocationType> _WarehouseLocationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Warehouse> Warehouses
        {
            get
            {
                if ((_Warehouses == null))
                {
                    _Warehouses = base.CreateObjectSet<Warehouse>("Warehouses");
                }
                return _Warehouses;
            }
        }
        private ObjectSet<Warehouse> _Warehouses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarehouseType> WarehouseTypes
        {
            get
            {
                if ((_WarehouseTypes == null))
                {
                    _WarehouseTypes = base.CreateObjectSet<WarehouseType>("WarehouseTypes");
                }
                return _WarehouseTypes;
            }
        }
        private ObjectSet<WarehouseType> _WarehouseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Temp> Temps
        {
            get
            {
                if ((_Temps == null))
                {
                    _Temps = base.CreateObjectSet<Temp>("Temps");
                }
                return _Temps;
            }
        }
        private ObjectSet<Temp> _Temps;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Plants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlants(Plant plant)
        {
            base.AddObject("Plants", plant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UdListItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUdListItems(UdListItem udListItem)
        {
            base.AddObject("UdListItems", udListItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UdLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUdLists(UdList udList)
        {
            base.AddObject("UdLists", udList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarehouseCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouseCodes(WarehouseCode warehouseCode)
        {
            base.AddObject("WarehouseCodes", warehouseCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarehouseLocationBinCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouseLocationBinCodes(WarehouseLocationBinCode warehouseLocationBinCode)
        {
            base.AddObject("WarehouseLocationBinCodes", warehouseLocationBinCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarehouseLocationBins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouseLocationBins(WarehouseLocationBin warehouseLocationBin)
        {
            base.AddObject("WarehouseLocationBins", warehouseLocationBin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarehouseLocationBinTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouseLocationBinTypes(WarehouseLocationBinType warehouseLocationBinType)
        {
            base.AddObject("WarehouseLocationBinTypes", warehouseLocationBinType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarehouseLocationCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouseLocationCodes(WarehouseLocationCode warehouseLocationCode)
        {
            base.AddObject("WarehouseLocationCodes", warehouseLocationCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarehouseLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouseLocations(WarehouseLocation warehouseLocation)
        {
            base.AddObject("WarehouseLocations", warehouseLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarehouseLocationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouseLocationTypes(WarehouseLocationType warehouseLocationType)
        {
            base.AddObject("WarehouseLocationTypes", warehouseLocationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Warehouses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouses(Warehouse warehouse)
        {
            base.AddObject("Warehouses", warehouse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarehouseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouseTypes(WarehouseType warehouseType)
        {
            base.AddObject("WarehouseTypes", warehouseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Temps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemps(Temp temp)
        {
            base.AddObject("Temps", temp);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static Address CreateAddress(global::System.String companyID, global::System.String addressID, global::System.Int64 autoID)
        {
            Address address = new Address();
            address.CompanyID = companyID;
            address.AddressID = addressID;
            address.AutoID = autoID;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.String _AddressID;
        partial void OnAddressIDChanging(global::System.String value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address3
        {
            get
            {
                return _Address3;
            }
            set
            {
                OnAddress3Changing(value);
                ReportPropertyChanging("Address3");
                _Address3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address3");
                OnAddress3Changed();
            }
        }
        private global::System.String _Address3;
        partial void OnAddress3Changing(global::System.String value);
        partial void OnAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNum
        {
            get
            {
                return _PhoneNum;
            }
            set
            {
                OnPhoneNumChanging(value);
                ReportPropertyChanging("PhoneNum");
                _PhoneNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNum");
                OnPhoneNumChanged();
            }
        }
        private global::System.String _PhoneNum;
        partial void OnPhoneNumChanging(global::System.String value);
        partial void OnPhoneNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNum2
        {
            get
            {
                return _PhoneNum2;
            }
            set
            {
                OnPhoneNum2Changing(value);
                ReportPropertyChanging("PhoneNum2");
                _PhoneNum2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNum2");
                OnPhoneNum2Changed();
            }
        }
        private global::System.String _PhoneNum2;
        partial void OnPhoneNum2Changing(global::System.String value);
        partial void OnPhoneNum2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNum
        {
            get
            {
                return _FaxNum;
            }
            set
            {
                OnFaxNumChanging(value);
                ReportPropertyChanging("FaxNum");
                _FaxNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FaxNum");
                OnFaxNumChanged();
            }
        }
        private global::System.String _FaxNum;
        partial void OnFaxNumChanging(global::System.String value);
        partial void OnFaxNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email2
        {
            get
            {
                return _Email2;
            }
            set
            {
                OnEmail2Changing(value);
                ReportPropertyChanging("Email2");
                _Email2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email2");
                OnEmail2Changed();
            }
        }
        private global::System.String _Email2;
        partial void OnEmail2Changing(global::System.String value);
        partial void OnEmail2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Addresses_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_Addresses_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_Addresses_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_Addresses_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_Addresses_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Plants_Addresses", "Plants")]
        public EntityCollection<Plant> Plants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Plant>("XERPModel.FK_Plants_Addresses", "Plants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Plant>("XERPModel.FK_Plants_Addresses", "Plants", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Warehouses_Addresses1", "Warehouses")]
        public EntityCollection<Warehouse> Warehouses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Warehouse>("XERPModel.FK_Warehouses_Addresses1", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Warehouse>("XERPModel.FK_Warehouses_Addresses1", "Warehouses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static Company CreateCompany(global::System.String companyID, global::System.Int64 autoID)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.AutoID = autoID;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyTypeID
        {
            get
            {
                return _CompanyTypeID;
            }
            set
            {
                OnCompanyTypeIDChanging(value);
                ReportPropertyChanging("CompanyTypeID");
                _CompanyTypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyTypeID");
                OnCompanyTypeIDChanged();
            }
        }
        private global::System.String _CompanyTypeID;
        partial void OnCompanyTypeIDChanging(global::System.String value);
        partial void OnCompanyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyCodeID
        {
            get
            {
                return _CompanyCodeID;
            }
            set
            {
                OnCompanyCodeIDChanging(value);
                ReportPropertyChanging("CompanyCodeID");
                _CompanyCodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyCodeID");
                OnCompanyCodeIDChanged();
            }
        }
        private global::System.String _CompanyCodeID;
        partial void OnCompanyCodeIDChanging(global::System.String value);
        partial void OnCompanyCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateTaxCode
        {
            get
            {
                return _StateTaxCode;
            }
            set
            {
                OnStateTaxCodeChanging(value);
                ReportPropertyChanging("StateTaxCode");
                _StateTaxCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateTaxCode");
                OnStateTaxCodeChanged();
            }
        }
        private global::System.String _StateTaxCode;
        partial void OnStateTaxCodeChanging(global::System.String value);
        partial void OnStateTaxCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxRegionCode
        {
            get
            {
                return _TaxRegionCode;
            }
            set
            {
                OnTaxRegionCodeChanging(value);
                ReportPropertyChanging("TaxRegionCode");
                _TaxRegionCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxRegionCode");
                OnTaxRegionCodeChanged();
            }
        }
        private global::System.String _TaxRegionCode;
        partial void OnTaxRegionCodeChanging(global::System.String value);
        partial void OnTaxRegionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentFiscalYear
        {
            get
            {
                return _CurrentFiscalYear;
            }
            set
            {
                OnCurrentFiscalYearChanging(value);
                ReportPropertyChanging("CurrentFiscalYear");
                _CurrentFiscalYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentFiscalYear");
                OnCurrentFiscalYearChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentFiscalYear;
        partial void OnCurrentFiscalYearChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentFiscalYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultExecutablePath
        {
            get
            {
                return _DefaultExecutablePath;
            }
            set
            {
                OnDefaultExecutablePathChanging(value);
                ReportPropertyChanging("DefaultExecutablePath");
                _DefaultExecutablePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultExecutablePath");
                OnDefaultExecutablePathChanged();
            }
        }
        private global::System.String _DefaultExecutablePath;
        partial void OnDefaultExecutablePathChanging(global::System.String value);
        partial void OnDefaultExecutablePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address3
        {
            get
            {
                return _Address3;
            }
            set
            {
                OnAddress3Changing(value);
                ReportPropertyChanging("Address3");
                _Address3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address3");
                OnAddress3Changed();
            }
        }
        private global::System.String _Address3;
        partial void OnAddress3Changing(global::System.String value);
        partial void OnAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNum
        {
            get
            {
                return _PhoneNum;
            }
            set
            {
                OnPhoneNumChanging(value);
                ReportPropertyChanging("PhoneNum");
                _PhoneNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNum");
                OnPhoneNumChanged();
            }
        }
        private global::System.String _PhoneNum;
        partial void OnPhoneNumChanging(global::System.String value);
        partial void OnPhoneNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNum2
        {
            get
            {
                return _PhoneNum2;
            }
            set
            {
                OnPhoneNum2Changing(value);
                ReportPropertyChanging("PhoneNum2");
                _PhoneNum2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNum2");
                OnPhoneNum2Changed();
            }
        }
        private global::System.String _PhoneNum2;
        partial void OnPhoneNum2Changing(global::System.String value);
        partial void OnPhoneNum2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNum
        {
            get
            {
                return _FaxNum;
            }
            set
            {
                OnFaxNumChanging(value);
                ReportPropertyChanging("FaxNum");
                _FaxNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FaxNum");
                OnFaxNumChanged();
            }
        }
        private global::System.String _FaxNum;
        partial void OnFaxNumChanging(global::System.String value);
        partial void OnFaxNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email2
        {
            get
            {
                return _Email2;
            }
            set
            {
                OnEmail2Changing(value);
                ReportPropertyChanging("Email2");
                _Email2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email2");
                OnEmail2Changed();
            }
        }
        private global::System.String _Email2;
        partial void OnEmail2Changing(global::System.String value);
        partial void OnEmail2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Addresses_Companies", "Addresses")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("XERPModel.FK_Addresses_Companies", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("XERPModel.FK_Addresses_Companies", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Plants_Companies", "Plants")]
        public EntityCollection<Plant> Plants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Plant>("XERPModel.FK_Plants_Companies", "Plants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Plant>("XERPModel.FK_Plants_Companies", "Plants", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_UdList_Company", "UdLists")]
        public EntityCollection<UdList> UdLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UdList>("XERPModel.FK_UdList_Company", "UdLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UdList>("XERPModel.FK_UdList_Company", "UdLists", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_UdListItem_Company", "UdListItems")]
        public EntityCollection<UdListItem> UdListItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UdListItem>("XERPModel.FK_UdListItem_Company", "UdListItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UdListItem>("XERPModel.FK_UdListItem_Company", "UdListItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseCode_Company", "WarehouseCodes")]
        public EntityCollection<WarehouseCode> WarehouseCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseCode>("XERPModel.FK_WarehouseCode_Company", "WarehouseCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseCode>("XERPModel.FK_WarehouseCode_Company", "WarehouseCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBinCode_Company", "WarehouseLocationBinCodes")]
        public EntityCollection<WarehouseLocationBinCode> WarehouseLocationBinCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocationBinCode>("XERPModel.FK_WarehouseLocationBinCode_Company", "WarehouseLocationBinCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocationBinCode>("XERPModel.FK_WarehouseLocationBinCode_Company", "WarehouseLocationBinCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBins_Companies", "WarehouseLocationBins")]
        public EntityCollection<WarehouseLocationBin> WarehouseLocationBins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocationBin>("XERPModel.FK_WarehouseLocationBins_Companies", "WarehouseLocationBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocationBin>("XERPModel.FK_WarehouseLocationBins_Companies", "WarehouseLocationBins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBinType_Company", "WarehouseLocationBinTypes")]
        public EntityCollection<WarehouseLocationBinType> WarehouseLocationBinTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocationBinType>("XERPModel.FK_WarehouseLocationBinType_Company", "WarehouseLocationBinTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocationBinType>("XERPModel.FK_WarehouseLocationBinType_Company", "WarehouseLocationBinTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationCode_Company", "WarehouseLocationCodes")]
        public EntityCollection<WarehouseLocationCode> WarehouseLocationCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocationCode>("XERPModel.FK_WarehouseLocationCode_Company", "WarehouseLocationCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocationCode>("XERPModel.FK_WarehouseLocationCode_Company", "WarehouseLocationCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocations_Companies", "WarehouseLocations")]
        public EntityCollection<WarehouseLocation> WarehouseLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocation>("XERPModel.FK_WarehouseLocations_Companies", "WarehouseLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocation>("XERPModel.FK_WarehouseLocations_Companies", "WarehouseLocations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationType_Company", "WarehouseLocationTypes")]
        public EntityCollection<WarehouseLocationType> WarehouseLocationTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocationType>("XERPModel.FK_WarehouseLocationType_Company", "WarehouseLocationTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocationType>("XERPModel.FK_WarehouseLocationType_Company", "WarehouseLocationTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Warehouses_Companies1", "Warehouses")]
        public EntityCollection<Warehouse> Warehouses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Warehouse>("XERPModel.FK_Warehouses_Companies1", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Warehouse>("XERPModel.FK_Warehouses_Companies1", "Warehouses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseType_Company", "WarehouseTypes")]
        public EntityCollection<WarehouseType> WarehouseTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseType>("XERPModel.FK_WarehouseType_Company", "WarehouseTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseType>("XERPModel.FK_WarehouseType_Company", "WarehouseTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="Plant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Plant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Plant object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="plantID">Initial value of the PlantID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static Plant CreatePlant(global::System.String companyID, global::System.String plantID, global::System.Int64 autoID)
        {
            Plant plant = new Plant();
            plant.CompanyID = companyID;
            plant.PlantID = plantID;
            plant.AutoID = autoID;
            return plant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlantID
        {
            get
            {
                return _PlantID;
            }
            set
            {
                if (_PlantID != value)
                {
                    OnPlantIDChanging(value);
                    ReportPropertyChanging("PlantID");
                    _PlantID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PlantID");
                    OnPlantIDChanged();
                }
            }
        }
        private global::System.String _PlantID;
        partial void OnPlantIDChanging(global::System.String value);
        partial void OnPlantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DefaultPlant
        {
            get
            {
                return _DefaultPlant;
            }
            set
            {
                OnDefaultPlantChanging(value);
                ReportPropertyChanging("DefaultPlant");
                _DefaultPlant = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultPlant");
                OnDefaultPlantChanged();
            }
        }
        private Nullable<global::System.Boolean> _DefaultPlant;
        partial void OnDefaultPlantChanging(Nullable<global::System.Boolean> value);
        partial void OnDefaultPlantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlantTypeID
        {
            get
            {
                return _PlantTypeID;
            }
            set
            {
                OnPlantTypeIDChanging(value);
                ReportPropertyChanging("PlantTypeID");
                _PlantTypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlantTypeID");
                OnPlantTypeIDChanged();
            }
        }
        private global::System.String _PlantTypeID;
        partial void OnPlantTypeIDChanging(global::System.String value);
        partial void OnPlantTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlantCodeID
        {
            get
            {
                return _PlantCodeID;
            }
            set
            {
                OnPlantCodeIDChanging(value);
                ReportPropertyChanging("PlantCodeID");
                _PlantCodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlantCodeID");
                OnPlantCodeIDChanged();
            }
        }
        private global::System.String _PlantCodeID;
        partial void OnPlantCodeIDChanging(global::System.String value);
        partial void OnPlantCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private global::System.String _AddressID;
        partial void OnAddressIDChanging(global::System.String value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Plants_Addresses", "Addresses")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("XERPModel.FK_Plants_Addresses", "Addresses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("XERPModel.FK_Plants_Addresses", "Addresses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("XERPModel.FK_Plants_Addresses", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("XERPModel.FK_Plants_Addresses", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Plants_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_Plants_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_Plants_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_Plants_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_Plants_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Warehouses_Plants", "Warehouses")]
        public EntityCollection<Warehouse> Warehouses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Warehouse>("XERPModel.FK_Warehouses_Plants", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Warehouse>("XERPModel.FK_Warehouses_Plants", "Warehouses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="Temp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Temp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Temp object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Temp CreateTemp(global::System.Int64 id)
        {
            Temp temp = new Temp();
            temp.ID = id;
            return temp;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Bool_1
        {
            get
            {
                return _Bool_1;
            }
            set
            {
                OnBool_1Changing(value);
                ReportPropertyChanging("Bool_1");
                _Bool_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bool_1");
                OnBool_1Changed();
            }
        }
        private Nullable<global::System.Boolean> _Bool_1;
        partial void OnBool_1Changing(Nullable<global::System.Boolean> value);
        partial void OnBool_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortChar_1
        {
            get
            {
                return _ShortChar_1;
            }
            set
            {
                OnShortChar_1Changing(value);
                ReportPropertyChanging("ShortChar_1");
                _ShortChar_1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortChar_1");
                OnShortChar_1Changed();
            }
        }
        private global::System.String _ShortChar_1;
        partial void OnShortChar_1Changing(global::System.String value);
        partial void OnShortChar_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Int_1
        {
            get
            {
                return _Int_1;
            }
            set
            {
                OnInt_1Changing(value);
                ReportPropertyChanging("Int_1");
                _Int_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Int_1");
                OnInt_1Changed();
            }
        }
        private Nullable<global::System.Int32> _Int_1;
        partial void OnInt_1Changing(Nullable<global::System.Int32> value);
        partial void OnInt_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Decimal_1
        {
            get
            {
                return _Decimal_1;
            }
            set
            {
                OnDecimal_1Changing(value);
                ReportPropertyChanging("Decimal_1");
                _Decimal_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Decimal_1");
                OnDecimal_1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Decimal_1;
        partial void OnDecimal_1Changing(Nullable<global::System.Decimal> value);
        partial void OnDecimal_1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="UdList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UdList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UdList object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="udListID">Initial value of the UdListID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static UdList CreateUdList(global::System.String companyID, global::System.String udListID, global::System.Int64 autoID)
        {
            UdList udList = new UdList();
            udList.CompanyID = companyID;
            udList.UdListID = udListID;
            udList.AutoID = autoID;
            return udList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UdListID
        {
            get
            {
                return _UdListID;
            }
            set
            {
                if (_UdListID != value)
                {
                    OnUdListIDChanging(value);
                    ReportPropertyChanging("UdListID");
                    _UdListID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UdListID");
                    OnUdListIDChanged();
                }
            }
        }
        private global::System.String _UdListID;
        partial void OnUdListIDChanging(global::System.String value);
        partial void OnUdListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_UdList_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_UdList_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_UdList_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_UdList_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_UdList_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_UdListItem_UdList", "UdListItems")]
        public EntityCollection<UdListItem> UdListItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UdListItem>("XERPModel.FK_UdListItem_UdList", "UdListItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UdListItem>("XERPModel.FK_UdListItem_UdList", "UdListItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="UdListItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UdListItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UdListItem object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="udListID">Initial value of the UdListID property.</param>
        /// <param name="udListItemID">Initial value of the UdListItemID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static UdListItem CreateUdListItem(global::System.String companyID, global::System.String udListID, global::System.String udListItemID, global::System.Int64 autoID)
        {
            UdListItem udListItem = new UdListItem();
            udListItem.CompanyID = companyID;
            udListItem.UdListID = udListID;
            udListItem.UdListItemID = udListItemID;
            udListItem.AutoID = autoID;
            return udListItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UdListID
        {
            get
            {
                return _UdListID;
            }
            set
            {
                if (_UdListID != value)
                {
                    OnUdListIDChanging(value);
                    ReportPropertyChanging("UdListID");
                    _UdListID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UdListID");
                    OnUdListIDChanged();
                }
            }
        }
        private global::System.String _UdListID;
        partial void OnUdListIDChanging(global::System.String value);
        partial void OnUdListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UdListItemID
        {
            get
            {
                return _UdListItemID;
            }
            set
            {
                if (_UdListItemID != value)
                {
                    OnUdListItemIDChanging(value);
                    ReportPropertyChanging("UdListItemID");
                    _UdListItemID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UdListItemID");
                    OnUdListItemIDChanged();
                }
            }
        }
        private global::System.String _UdListItemID;
        partial void OnUdListItemIDChanging(global::System.String value);
        partial void OnUdListItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_UdListItem_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_UdListItem_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_UdListItem_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_UdListItem_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_UdListItem_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_UdListItem_UdList", "UdLists")]
        public UdList UdList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UdList>("XERPModel.FK_UdListItem_UdList", "UdLists").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UdList>("XERPModel.FK_UdListItem_UdList", "UdLists").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UdList> UdListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UdList>("XERPModel.FK_UdListItem_UdList", "UdLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UdList>("XERPModel.FK_UdListItem_UdList", "UdLists", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="Warehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Warehouse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Warehouse object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="plantID">Initial value of the PlantID property.</param>
        /// <param name="warehouseID">Initial value of the WarehouseID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static Warehouse CreateWarehouse(global::System.String companyID, global::System.String plantID, global::System.String warehouseID, global::System.Int64 autoID)
        {
            Warehouse warehouse = new Warehouse();
            warehouse.CompanyID = companyID;
            warehouse.PlantID = plantID;
            warehouse.WarehouseID = warehouseID;
            warehouse.AutoID = autoID;
            return warehouse;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlantID
        {
            get
            {
                return _PlantID;
            }
            set
            {
                if (_PlantID != value)
                {
                    OnPlantIDChanging(value);
                    ReportPropertyChanging("PlantID");
                    _PlantID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PlantID");
                    OnPlantIDChanged();
                }
            }
        }
        private global::System.String _PlantID;
        partial void OnPlantIDChanging(global::System.String value);
        partial void OnPlantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseID
        {
            get
            {
                return _WarehouseID;
            }
            set
            {
                if (_WarehouseID != value)
                {
                    OnWarehouseIDChanging(value);
                    ReportPropertyChanging("WarehouseID");
                    _WarehouseID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseID");
                    OnWarehouseIDChanged();
                }
            }
        }
        private global::System.String _WarehouseID;
        partial void OnWarehouseIDChanging(global::System.String value);
        partial void OnWarehouseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DefaultWarehouse
        {
            get
            {
                return _DefaultWarehouse;
            }
            set
            {
                OnDefaultWarehouseChanging(value);
                ReportPropertyChanging("DefaultWarehouse");
                _DefaultWarehouse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultWarehouse");
                OnDefaultWarehouseChanged();
            }
        }
        private Nullable<global::System.Boolean> _DefaultWarehouse;
        partial void OnDefaultWarehouseChanging(Nullable<global::System.Boolean> value);
        partial void OnDefaultWarehouseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseTypeID
        {
            get
            {
                return _WarehouseTypeID;
            }
            set
            {
                OnWarehouseTypeIDChanging(value);
                ReportPropertyChanging("WarehouseTypeID");
                _WarehouseTypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseTypeID");
                OnWarehouseTypeIDChanged();
            }
        }
        private global::System.String _WarehouseTypeID;
        partial void OnWarehouseTypeIDChanging(global::System.String value);
        partial void OnWarehouseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseCodeID
        {
            get
            {
                return _WarehouseCodeID;
            }
            set
            {
                OnWarehouseCodeIDChanging(value);
                ReportPropertyChanging("WarehouseCodeID");
                _WarehouseCodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseCodeID");
                OnWarehouseCodeIDChanged();
            }
        }
        private global::System.String _WarehouseCodeID;
        partial void OnWarehouseCodeIDChanging(global::System.String value);
        partial void OnWarehouseCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private global::System.String _AddressID;
        partial void OnAddressIDChanging(global::System.String value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManagerName
        {
            get
            {
                return _ManagerName;
            }
            set
            {
                OnManagerNameChanging(value);
                ReportPropertyChanging("ManagerName");
                _ManagerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManagerName");
                OnManagerNameChanged();
            }
        }
        private global::System.String _ManagerName;
        partial void OnManagerNameChanging(global::System.String value);
        partial void OnManagerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Warehouses_Addresses1", "Addresses")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("XERPModel.FK_Warehouses_Addresses1", "Addresses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("XERPModel.FK_Warehouses_Addresses1", "Addresses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("XERPModel.FK_Warehouses_Addresses1", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("XERPModel.FK_Warehouses_Addresses1", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Warehouses_Companies1", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_Warehouses_Companies1", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_Warehouses_Companies1", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_Warehouses_Companies1", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_Warehouses_Companies1", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Warehouses_Plants", "Plants")]
        public Plant Plant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plant>("XERPModel.FK_Warehouses_Plants", "Plants").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plant>("XERPModel.FK_Warehouses_Plants", "Plants").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Plant> PlantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plant>("XERPModel.FK_Warehouses_Plants", "Plants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Plant>("XERPModel.FK_Warehouses_Plants", "Plants", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Warehouses_WarehouseCodes", "WarehouseCodes")]
        public WarehouseCode WarehouseCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseCode>("XERPModel.FK_Warehouses_WarehouseCodes", "WarehouseCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseCode>("XERPModel.FK_Warehouses_WarehouseCodes", "WarehouseCodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WarehouseCode> WarehouseCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseCode>("XERPModel.FK_Warehouses_WarehouseCodes", "WarehouseCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WarehouseCode>("XERPModel.FK_Warehouses_WarehouseCodes", "WarehouseCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocations_Warehouses", "WarehouseLocations")]
        public EntityCollection<WarehouseLocation> WarehouseLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocation>("XERPModel.FK_WarehouseLocations_Warehouses", "WarehouseLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocation>("XERPModel.FK_WarehouseLocations_Warehouses", "WarehouseLocations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Warehouses_WarehouseTypes", "WarehouseTypes")]
        public WarehouseType WarehouseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseType>("XERPModel.FK_Warehouses_WarehouseTypes", "WarehouseTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseType>("XERPModel.FK_Warehouses_WarehouseTypes", "WarehouseTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WarehouseType> WarehouseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseType>("XERPModel.FK_Warehouses_WarehouseTypes", "WarehouseTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WarehouseType>("XERPModel.FK_Warehouses_WarehouseTypes", "WarehouseTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="WarehouseCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarehouseCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarehouseCode object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="warehouseCodeID">Initial value of the WarehouseCodeID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static WarehouseCode CreateWarehouseCode(global::System.String companyID, global::System.String warehouseCodeID, global::System.Int64 autoID)
        {
            WarehouseCode warehouseCode = new WarehouseCode();
            warehouseCode.CompanyID = companyID;
            warehouseCode.WarehouseCodeID = warehouseCodeID;
            warehouseCode.AutoID = autoID;
            return warehouseCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseCodeID
        {
            get
            {
                return _WarehouseCodeID;
            }
            set
            {
                if (_WarehouseCodeID != value)
                {
                    OnWarehouseCodeIDChanging(value);
                    ReportPropertyChanging("WarehouseCodeID");
                    _WarehouseCodeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseCodeID");
                    OnWarehouseCodeIDChanged();
                }
            }
        }
        private global::System.String _WarehouseCodeID;
        partial void OnWarehouseCodeIDChanging(global::System.String value);
        partial void OnWarehouseCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseCode_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseCode_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseCode_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseCode_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_WarehouseCode_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Warehouses_WarehouseCodes", "Warehouses")]
        public EntityCollection<Warehouse> Warehouses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Warehouse>("XERPModel.FK_Warehouses_WarehouseCodes", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Warehouse>("XERPModel.FK_Warehouses_WarehouseCodes", "Warehouses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="WarehouseLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarehouseLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarehouseLocation object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="plantID">Initial value of the PlantID property.</param>
        /// <param name="warehouseID">Initial value of the WarehouseID property.</param>
        /// <param name="warehouseLocationID">Initial value of the WarehouseLocationID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static WarehouseLocation CreateWarehouseLocation(global::System.String companyID, global::System.String plantID, global::System.String warehouseID, global::System.String warehouseLocationID, global::System.Int64 autoID)
        {
            WarehouseLocation warehouseLocation = new WarehouseLocation();
            warehouseLocation.CompanyID = companyID;
            warehouseLocation.PlantID = plantID;
            warehouseLocation.WarehouseID = warehouseID;
            warehouseLocation.WarehouseLocationID = warehouseLocationID;
            warehouseLocation.AutoID = autoID;
            return warehouseLocation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlantID
        {
            get
            {
                return _PlantID;
            }
            set
            {
                if (_PlantID != value)
                {
                    OnPlantIDChanging(value);
                    ReportPropertyChanging("PlantID");
                    _PlantID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PlantID");
                    OnPlantIDChanged();
                }
            }
        }
        private global::System.String _PlantID;
        partial void OnPlantIDChanging(global::System.String value);
        partial void OnPlantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseID
        {
            get
            {
                return _WarehouseID;
            }
            set
            {
                if (_WarehouseID != value)
                {
                    OnWarehouseIDChanging(value);
                    ReportPropertyChanging("WarehouseID");
                    _WarehouseID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseID");
                    OnWarehouseIDChanged();
                }
            }
        }
        private global::System.String _WarehouseID;
        partial void OnWarehouseIDChanging(global::System.String value);
        partial void OnWarehouseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationID
        {
            get
            {
                return _WarehouseLocationID;
            }
            set
            {
                if (_WarehouseLocationID != value)
                {
                    OnWarehouseLocationIDChanging(value);
                    ReportPropertyChanging("WarehouseLocationID");
                    _WarehouseLocationID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseLocationID");
                    OnWarehouseLocationIDChanged();
                }
            }
        }
        private global::System.String _WarehouseLocationID;
        partial void OnWarehouseLocationIDChanging(global::System.String value);
        partial void OnWarehouseLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DefaultLocation
        {
            get
            {
                return _DefaultLocation;
            }
            set
            {
                OnDefaultLocationChanging(value);
                ReportPropertyChanging("DefaultLocation");
                _DefaultLocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultLocation");
                OnDefaultLocationChanged();
            }
        }
        private Nullable<global::System.Boolean> _DefaultLocation;
        partial void OnDefaultLocationChanging(Nullable<global::System.Boolean> value);
        partial void OnDefaultLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationTypeID
        {
            get
            {
                return _WarehouseLocationTypeID;
            }
            set
            {
                OnWarehouseLocationTypeIDChanging(value);
                ReportPropertyChanging("WarehouseLocationTypeID");
                _WarehouseLocationTypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseLocationTypeID");
                OnWarehouseLocationTypeIDChanged();
            }
        }
        private global::System.String _WarehouseLocationTypeID;
        partial void OnWarehouseLocationTypeIDChanging(global::System.String value);
        partial void OnWarehouseLocationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationCodeID
        {
            get
            {
                return _WarehouseLocationCodeID;
            }
            set
            {
                OnWarehouseLocationCodeIDChanging(value);
                ReportPropertyChanging("WarehouseLocationCodeID");
                _WarehouseLocationCodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseLocationCodeID");
                OnWarehouseLocationCodeIDChanged();
            }
        }
        private global::System.String _WarehouseLocationCodeID;
        partial void OnWarehouseLocationCodeIDChanging(global::System.String value);
        partial void OnWarehouseLocationCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocations_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocations_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocations_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocations_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_WarehouseLocations_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBins_WarehouseLocations", "WarehouseLocationBins")]
        public EntityCollection<WarehouseLocationBin> WarehouseLocationBins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocationBin>("XERPModel.FK_WarehouseLocationBins_WarehouseLocations", "WarehouseLocationBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocationBin>("XERPModel.FK_WarehouseLocationBins_WarehouseLocations", "WarehouseLocationBins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocations_WarehouseLocationCodes", "WarehouseLocationCodes")]
        public WarehouseLocationCode WarehouseLocationCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationCode>("XERPModel.FK_WarehouseLocations_WarehouseLocationCodes", "WarehouseLocationCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationCode>("XERPModel.FK_WarehouseLocations_WarehouseLocationCodes", "WarehouseLocationCodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WarehouseLocationCode> WarehouseLocationCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationCode>("XERPModel.FK_WarehouseLocations_WarehouseLocationCodes", "WarehouseLocationCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WarehouseLocationCode>("XERPModel.FK_WarehouseLocations_WarehouseLocationCodes", "WarehouseLocationCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocations_WarehouseLocationTypes", "WarehouseLocationTypes")]
        public WarehouseLocationType WarehouseLocationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationType>("XERPModel.FK_WarehouseLocations_WarehouseLocationTypes", "WarehouseLocationTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationType>("XERPModel.FK_WarehouseLocations_WarehouseLocationTypes", "WarehouseLocationTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WarehouseLocationType> WarehouseLocationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationType>("XERPModel.FK_WarehouseLocations_WarehouseLocationTypes", "WarehouseLocationTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WarehouseLocationType>("XERPModel.FK_WarehouseLocations_WarehouseLocationTypes", "WarehouseLocationTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocations_Warehouses", "Warehouses")]
        public Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("XERPModel.FK_WarehouseLocations_Warehouses", "Warehouses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("XERPModel.FK_WarehouseLocations_Warehouses", "Warehouses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("XERPModel.FK_WarehouseLocations_Warehouses", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("XERPModel.FK_WarehouseLocations_Warehouses", "Warehouses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="WarehouseLocationBin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarehouseLocationBin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarehouseLocationBin object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="plantID">Initial value of the PlantID property.</param>
        /// <param name="warehouseID">Initial value of the WarehouseID property.</param>
        /// <param name="warehouseLocationID">Initial value of the WarehouseLocationID property.</param>
        /// <param name="warehouseLocationBinID">Initial value of the WarehouseLocationBinID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static WarehouseLocationBin CreateWarehouseLocationBin(global::System.String companyID, global::System.String plantID, global::System.String warehouseID, global::System.String warehouseLocationID, global::System.String warehouseLocationBinID, global::System.Int64 autoID)
        {
            WarehouseLocationBin warehouseLocationBin = new WarehouseLocationBin();
            warehouseLocationBin.CompanyID = companyID;
            warehouseLocationBin.PlantID = plantID;
            warehouseLocationBin.WarehouseID = warehouseID;
            warehouseLocationBin.WarehouseLocationID = warehouseLocationID;
            warehouseLocationBin.WarehouseLocationBinID = warehouseLocationBinID;
            warehouseLocationBin.AutoID = autoID;
            return warehouseLocationBin;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlantID
        {
            get
            {
                return _PlantID;
            }
            set
            {
                if (_PlantID != value)
                {
                    OnPlantIDChanging(value);
                    ReportPropertyChanging("PlantID");
                    _PlantID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PlantID");
                    OnPlantIDChanged();
                }
            }
        }
        private global::System.String _PlantID;
        partial void OnPlantIDChanging(global::System.String value);
        partial void OnPlantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseID
        {
            get
            {
                return _WarehouseID;
            }
            set
            {
                if (_WarehouseID != value)
                {
                    OnWarehouseIDChanging(value);
                    ReportPropertyChanging("WarehouseID");
                    _WarehouseID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseID");
                    OnWarehouseIDChanged();
                }
            }
        }
        private global::System.String _WarehouseID;
        partial void OnWarehouseIDChanging(global::System.String value);
        partial void OnWarehouseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationID
        {
            get
            {
                return _WarehouseLocationID;
            }
            set
            {
                if (_WarehouseLocationID != value)
                {
                    OnWarehouseLocationIDChanging(value);
                    ReportPropertyChanging("WarehouseLocationID");
                    _WarehouseLocationID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseLocationID");
                    OnWarehouseLocationIDChanged();
                }
            }
        }
        private global::System.String _WarehouseLocationID;
        partial void OnWarehouseLocationIDChanging(global::System.String value);
        partial void OnWarehouseLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationBinID
        {
            get
            {
                return _WarehouseLocationBinID;
            }
            set
            {
                if (_WarehouseLocationBinID != value)
                {
                    OnWarehouseLocationBinIDChanging(value);
                    ReportPropertyChanging("WarehouseLocationBinID");
                    _WarehouseLocationBinID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseLocationBinID");
                    OnWarehouseLocationBinIDChanged();
                }
            }
        }
        private global::System.String _WarehouseLocationBinID;
        partial void OnWarehouseLocationBinIDChanging(global::System.String value);
        partial void OnWarehouseLocationBinIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DefaultBin
        {
            get
            {
                return _DefaultBin;
            }
            set
            {
                OnDefaultBinChanging(value);
                ReportPropertyChanging("DefaultBin");
                _DefaultBin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultBin");
                OnDefaultBinChanged();
            }
        }
        private Nullable<global::System.Boolean> _DefaultBin;
        partial void OnDefaultBinChanging(Nullable<global::System.Boolean> value);
        partial void OnDefaultBinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationBinTypeID
        {
            get
            {
                return _WarehouseLocationBinTypeID;
            }
            set
            {
                OnWarehouseLocationBinTypeIDChanging(value);
                ReportPropertyChanging("WarehouseLocationBinTypeID");
                _WarehouseLocationBinTypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseLocationBinTypeID");
                OnWarehouseLocationBinTypeIDChanged();
            }
        }
        private global::System.String _WarehouseLocationBinTypeID;
        partial void OnWarehouseLocationBinTypeIDChanging(global::System.String value);
        partial void OnWarehouseLocationBinTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationBinCodeID
        {
            get
            {
                return _WarehouseLocationBinCodeID;
            }
            set
            {
                OnWarehouseLocationBinCodeIDChanging(value);
                ReportPropertyChanging("WarehouseLocationBinCodeID");
                _WarehouseLocationBinCodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseLocationBinCodeID");
                OnWarehouseLocationBinCodeIDChanged();
            }
        }
        private global::System.String _WarehouseLocationBinCodeID;
        partial void OnWarehouseLocationBinCodeIDChanging(global::System.String value);
        partial void OnWarehouseLocationBinCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBins_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationBins_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationBins_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationBins_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_WarehouseLocationBins_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBins_WarehouseLocationBinCodes", "WarehouseLocationBinCodes")]
        public WarehouseLocationBinCode WarehouseLocationBinCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationBinCode>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinCodes", "WarehouseLocationBinCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationBinCode>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinCodes", "WarehouseLocationBinCodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WarehouseLocationBinCode> WarehouseLocationBinCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationBinCode>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinCodes", "WarehouseLocationBinCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WarehouseLocationBinCode>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinCodes", "WarehouseLocationBinCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBins_WarehouseLocationBinTypes", "WarehouseLocationBinTypes")]
        public WarehouseLocationBinType WarehouseLocationBinType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationBinType>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinTypes", "WarehouseLocationBinTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationBinType>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinTypes", "WarehouseLocationBinTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WarehouseLocationBinType> WarehouseLocationBinTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocationBinType>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinTypes", "WarehouseLocationBinTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WarehouseLocationBinType>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinTypes", "WarehouseLocationBinTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBins_WarehouseLocations", "WarehouseLocations")]
        public WarehouseLocation WarehouseLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocation>("XERPModel.FK_WarehouseLocationBins_WarehouseLocations", "WarehouseLocations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocation>("XERPModel.FK_WarehouseLocationBins_WarehouseLocations", "WarehouseLocations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WarehouseLocation> WarehouseLocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarehouseLocation>("XERPModel.FK_WarehouseLocationBins_WarehouseLocations", "WarehouseLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WarehouseLocation>("XERPModel.FK_WarehouseLocationBins_WarehouseLocations", "WarehouseLocations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="WarehouseLocationBinCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarehouseLocationBinCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarehouseLocationBinCode object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="warehouseLocationBinCodeID">Initial value of the WarehouseLocationBinCodeID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static WarehouseLocationBinCode CreateWarehouseLocationBinCode(global::System.String companyID, global::System.String warehouseLocationBinCodeID, global::System.Int64 autoID)
        {
            WarehouseLocationBinCode warehouseLocationBinCode = new WarehouseLocationBinCode();
            warehouseLocationBinCode.CompanyID = companyID;
            warehouseLocationBinCode.WarehouseLocationBinCodeID = warehouseLocationBinCodeID;
            warehouseLocationBinCode.AutoID = autoID;
            return warehouseLocationBinCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationBinCodeID
        {
            get
            {
                return _WarehouseLocationBinCodeID;
            }
            set
            {
                if (_WarehouseLocationBinCodeID != value)
                {
                    OnWarehouseLocationBinCodeIDChanging(value);
                    ReportPropertyChanging("WarehouseLocationBinCodeID");
                    _WarehouseLocationBinCodeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseLocationBinCodeID");
                    OnWarehouseLocationBinCodeIDChanged();
                }
            }
        }
        private global::System.String _WarehouseLocationBinCodeID;
        partial void OnWarehouseLocationBinCodeIDChanging(global::System.String value);
        partial void OnWarehouseLocationBinCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBinCode_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationBinCode_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationBinCode_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationBinCode_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_WarehouseLocationBinCode_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBins_WarehouseLocationBinCodes", "WarehouseLocationBins")]
        public EntityCollection<WarehouseLocationBin> WarehouseLocationBins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocationBin>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinCodes", "WarehouseLocationBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocationBin>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinCodes", "WarehouseLocationBins", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="WarehouseLocationBinType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarehouseLocationBinType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarehouseLocationBinType object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="warehouseLocationBinTypeID">Initial value of the WarehouseLocationBinTypeID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static WarehouseLocationBinType CreateWarehouseLocationBinType(global::System.String companyID, global::System.String warehouseLocationBinTypeID, global::System.Int64 autoID)
        {
            WarehouseLocationBinType warehouseLocationBinType = new WarehouseLocationBinType();
            warehouseLocationBinType.CompanyID = companyID;
            warehouseLocationBinType.WarehouseLocationBinTypeID = warehouseLocationBinTypeID;
            warehouseLocationBinType.AutoID = autoID;
            return warehouseLocationBinType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationBinTypeID
        {
            get
            {
                return _WarehouseLocationBinTypeID;
            }
            set
            {
                if (_WarehouseLocationBinTypeID != value)
                {
                    OnWarehouseLocationBinTypeIDChanging(value);
                    ReportPropertyChanging("WarehouseLocationBinTypeID");
                    _WarehouseLocationBinTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseLocationBinTypeID");
                    OnWarehouseLocationBinTypeIDChanged();
                }
            }
        }
        private global::System.String _WarehouseLocationBinTypeID;
        partial void OnWarehouseLocationBinTypeIDChanging(global::System.String value);
        partial void OnWarehouseLocationBinTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBinType_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationBinType_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationBinType_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationBinType_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_WarehouseLocationBinType_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationBins_WarehouseLocationBinTypes", "WarehouseLocationBins")]
        public EntityCollection<WarehouseLocationBin> WarehouseLocationBins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocationBin>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinTypes", "WarehouseLocationBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocationBin>("XERPModel.FK_WarehouseLocationBins_WarehouseLocationBinTypes", "WarehouseLocationBins", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="WarehouseLocationCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarehouseLocationCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarehouseLocationCode object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="warehouseLocationCodeID">Initial value of the WarehouseLocationCodeID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static WarehouseLocationCode CreateWarehouseLocationCode(global::System.String companyID, global::System.String warehouseLocationCodeID, global::System.Int64 autoID)
        {
            WarehouseLocationCode warehouseLocationCode = new WarehouseLocationCode();
            warehouseLocationCode.CompanyID = companyID;
            warehouseLocationCode.WarehouseLocationCodeID = warehouseLocationCodeID;
            warehouseLocationCode.AutoID = autoID;
            return warehouseLocationCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationCodeID
        {
            get
            {
                return _WarehouseLocationCodeID;
            }
            set
            {
                if (_WarehouseLocationCodeID != value)
                {
                    OnWarehouseLocationCodeIDChanging(value);
                    ReportPropertyChanging("WarehouseLocationCodeID");
                    _WarehouseLocationCodeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseLocationCodeID");
                    OnWarehouseLocationCodeIDChanged();
                }
            }
        }
        private global::System.String _WarehouseLocationCodeID;
        partial void OnWarehouseLocationCodeIDChanging(global::System.String value);
        partial void OnWarehouseLocationCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationCode_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationCode_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationCode_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationCode_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_WarehouseLocationCode_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocations_WarehouseLocationCodes", "WarehouseLocations")]
        public EntityCollection<WarehouseLocation> WarehouseLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocation>("XERPModel.FK_WarehouseLocations_WarehouseLocationCodes", "WarehouseLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocation>("XERPModel.FK_WarehouseLocations_WarehouseLocationCodes", "WarehouseLocations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="WarehouseLocationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarehouseLocationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarehouseLocationType object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="warehouseLocationTypeID">Initial value of the WarehouseLocationTypeID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static WarehouseLocationType CreateWarehouseLocationType(global::System.String companyID, global::System.String warehouseLocationTypeID, global::System.Int64 autoID)
        {
            WarehouseLocationType warehouseLocationType = new WarehouseLocationType();
            warehouseLocationType.CompanyID = companyID;
            warehouseLocationType.WarehouseLocationTypeID = warehouseLocationTypeID;
            warehouseLocationType.AutoID = autoID;
            return warehouseLocationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseLocationTypeID
        {
            get
            {
                return _WarehouseLocationTypeID;
            }
            set
            {
                if (_WarehouseLocationTypeID != value)
                {
                    OnWarehouseLocationTypeIDChanging(value);
                    ReportPropertyChanging("WarehouseLocationTypeID");
                    _WarehouseLocationTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseLocationTypeID");
                    OnWarehouseLocationTypeIDChanged();
                }
            }
        }
        private global::System.String _WarehouseLocationTypeID;
        partial void OnWarehouseLocationTypeIDChanging(global::System.String value);
        partial void OnWarehouseLocationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocationType_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationType_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationType_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseLocationType_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_WarehouseLocationType_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseLocations_WarehouseLocationTypes", "WarehouseLocations")]
        public EntityCollection<WarehouseLocation> WarehouseLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WarehouseLocation>("XERPModel.FK_WarehouseLocations_WarehouseLocationTypes", "WarehouseLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WarehouseLocation>("XERPModel.FK_WarehouseLocations_WarehouseLocationTypes", "WarehouseLocations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XERPModel", Name="WarehouseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarehouseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarehouseType object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="warehouseTypeID">Initial value of the WarehouseTypeID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static WarehouseType CreateWarehouseType(global::System.String companyID, global::System.String warehouseTypeID, global::System.Int64 autoID)
        {
            WarehouseType warehouseType = new WarehouseType();
            warehouseType.CompanyID = companyID;
            warehouseType.WarehouseTypeID = warehouseTypeID;
            warehouseType.AutoID = autoID;
            return warehouseType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WarehouseTypeID
        {
            get
            {
                return _WarehouseTypeID;
            }
            set
            {
                if (_WarehouseTypeID != value)
                {
                    OnWarehouseTypeIDChanging(value);
                    ReportPropertyChanging("WarehouseTypeID");
                    _WarehouseTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WarehouseTypeID");
                    OnWarehouseTypeIDChanged();
                }
            }
        }
        private global::System.String _WarehouseTypeID;
        partial void OnWarehouseTypeIDChanging(global::System.String value);
        partial void OnWarehouseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsExpanded
        {
            get
            {
                return _IsExpanded;
            }
            set
            {
                OnIsExpandedChanging(value);
                ReportPropertyChanging("IsExpanded");
                _IsExpanded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpanded");
                OnIsExpandedChanged();
            }
        }
        private Nullable<global::System.Byte> _IsExpanded;
        partial void OnIsExpandedChanging(Nullable<global::System.Byte> value);
        partial void OnIsExpandedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsValid
        {
            get
            {
                return _IsValid;
            }
            set
            {
                OnIsValidChanging(value);
                ReportPropertyChanging("IsValid");
                _IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValid");
                OnIsValidChanged();
            }
        }
        private Nullable<global::System.Byte> _IsValid;
        partial void OnIsValidChanging(Nullable<global::System.Byte> value);
        partial void OnIsValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotValidMessage
        {
            get
            {
                return _NotValidMessage;
            }
            set
            {
                OnNotValidMessageChanging(value);
                ReportPropertyChanging("NotValidMessage");
                _NotValidMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NotValidMessage");
                OnNotValidMessageChanged();
            }
        }
        private global::System.String _NotValidMessage;
        partial void OnNotValidMessageChanging(global::System.String value);
        partial void OnNotValidMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedByDate
        {
            get
            {
                return _LastModifiedByDate;
            }
            set
            {
                OnLastModifiedByDateChanging(value);
                ReportPropertyChanging("LastModifiedByDate");
                _LastModifiedByDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByDate");
                OnLastModifiedByDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedByDate;
        partial void OnLastModifiedByDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedByDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_WarehouseType_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseType_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseType_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("XERPModel.FK_WarehouseType_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("XERPModel.FK_WarehouseType_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XERPModel", "FK_Warehouses_WarehouseTypes", "Warehouses")]
        public EntityCollection<Warehouse> Warehouses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Warehouse>("XERPModel.FK_Warehouses_WarehouseTypes", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Warehouse>("XERPModel.FK_Warehouses_WarehouseTypes", "Warehouses", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
