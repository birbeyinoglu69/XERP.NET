//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_DalItem_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.Company), "DalItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.DalItem), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_DalSecurity_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.Company), "DalSecurities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.DalSecurity), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_Image_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.Company), "DBStoredImages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.DBStoredImage), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_MenuItemCode_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.Company), "MenuItemCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuItemCode), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_MenuItemType_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.Company), "MenuItemTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuItemType), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_MenuSecurity_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.Company), "MenuSecurities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuSecurity), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_SecurityGroup_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.Company), "SecurityGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.SecurityGroup), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_UDListItem_Company", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.Company), "UdListItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.UdListItem), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_DalSecurity_DalItem", "DalItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.DalItem), "DalSecurities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.DalSecurity), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_DalSecurity_SecurityGroup", "SecurityGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.SecurityGroup), "DalSecurities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.DalSecurity), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_MenuSecurity_SecurityGroup", "SecurityGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.SecurityGroup), "MenuSecurities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuSecurity), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_MenuItem_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.Company), "MenuItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuItem), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_MenuItem_Image", "DBStoredImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.MenuSecurityDAL.DBStoredImage), "MenuItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuItem), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_MenuItem_MenuItemCode", "MenuItemCode", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuItemCode), "MenuItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuItem), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_MenuItem_MenuItemType", "MenuItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuItemType), "MenuItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuItem), true)]
[assembly: EdmRelationshipAttribute("MenuSecurityModel", "FK_MenuSecurity_MenuItem", "MenuItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuItem), "MenuSecurity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XERP.Server.DAL.MenuSecurityDAL.MenuSecurity), true)]

#endregion

namespace XERP.Server.DAL.MenuSecurityDAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MenuSecurityEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MenuSecurityEntities object using the connection string found in the 'MenuSecurityEntities' section of the application configuration file.
        /// </summary>
        public MenuSecurityEntities() : base("name=MenuSecurityEntities", "MenuSecurityEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MenuSecurityEntities object.
        /// </summary>
        public MenuSecurityEntities(string connectionString) : base(connectionString, "MenuSecurityEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MenuSecurityEntities object.
        /// </summary>
        public MenuSecurityEntities(EntityConnection connection) : base(connection, "MenuSecurityEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DalItem> DalItems
        {
            get
            {
                if ((_DalItems == null))
                {
                    _DalItems = base.CreateObjectSet<DalItem>("DalItems");
                }
                return _DalItems;
            }
        }
        private ObjectSet<DalItem> _DalItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DalSecurity> DalSecurities
        {
            get
            {
                if ((_DalSecurities == null))
                {
                    _DalSecurities = base.CreateObjectSet<DalSecurity>("DalSecurities");
                }
                return _DalSecurities;
            }
        }
        private ObjectSet<DalSecurity> _DalSecurities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBStoredImage> DBStoredImages
        {
            get
            {
                if ((_DBStoredImages == null))
                {
                    _DBStoredImages = base.CreateObjectSet<DBStoredImage>("DBStoredImages");
                }
                return _DBStoredImages;
            }
        }
        private ObjectSet<DBStoredImage> _DBStoredImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MenuItemCode> MenuItemCodes
        {
            get
            {
                if ((_MenuItemCodes == null))
                {
                    _MenuItemCodes = base.CreateObjectSet<MenuItemCode>("MenuItemCodes");
                }
                return _MenuItemCodes;
            }
        }
        private ObjectSet<MenuItemCode> _MenuItemCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MenuItemType> MenuItemTypes
        {
            get
            {
                if ((_MenuItemTypes == null))
                {
                    _MenuItemTypes = base.CreateObjectSet<MenuItemType>("MenuItemTypes");
                }
                return _MenuItemTypes;
            }
        }
        private ObjectSet<MenuItemType> _MenuItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MenuSecurity> MenuSecurities
        {
            get
            {
                if ((_MenuSecurities == null))
                {
                    _MenuSecurities = base.CreateObjectSet<MenuSecurity>("MenuSecurities");
                }
                return _MenuSecurities;
            }
        }
        private ObjectSet<MenuSecurity> _MenuSecurities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityGroup> SecurityGroups
        {
            get
            {
                if ((_SecurityGroups == null))
                {
                    _SecurityGroups = base.CreateObjectSet<SecurityGroup>("SecurityGroups");
                }
                return _SecurityGroups;
            }
        }
        private ObjectSet<SecurityGroup> _SecurityGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemUser> SystemUsers
        {
            get
            {
                if ((_SystemUsers == null))
                {
                    _SystemUsers = base.CreateObjectSet<SystemUser>("SystemUsers");
                }
                return _SystemUsers;
            }
        }
        private ObjectSet<SystemUser> _SystemUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Temp> Temps
        {
            get
            {
                if ((_Temps == null))
                {
                    _Temps = base.CreateObjectSet<Temp>("Temps");
                }
                return _Temps;
            }
        }
        private ObjectSet<Temp> _Temps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UdListItem> UdListItems
        {
            get
            {
                if ((_UdListItems == null))
                {
                    _UdListItems = base.CreateObjectSet<UdListItem>("UdListItems");
                }
                return _UdListItems;
            }
        }
        private ObjectSet<UdListItem> _UdListItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MenuItem> MenuItems
        {
            get
            {
                if ((_MenuItems == null))
                {
                    _MenuItems = base.CreateObjectSet<MenuItem>("MenuItems");
                }
                return _MenuItems;
            }
        }
        private ObjectSet<MenuItem> _MenuItems;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DalItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDalItems(DalItem dalItem)
        {
            base.AddObject("DalItems", dalItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DalSecurities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDalSecurities(DalSecurity dalSecurity)
        {
            base.AddObject("DalSecurities", dalSecurity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DBStoredImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDBStoredImages(DBStoredImage dBStoredImage)
        {
            base.AddObject("DBStoredImages", dBStoredImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MenuItemCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenuItemCodes(MenuItemCode menuItemCode)
        {
            base.AddObject("MenuItemCodes", menuItemCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MenuItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenuItemTypes(MenuItemType menuItemType)
        {
            base.AddObject("MenuItemTypes", menuItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MenuSecurities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenuSecurities(MenuSecurity menuSecurity)
        {
            base.AddObject("MenuSecurities", menuSecurity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityGroups(SecurityGroup securityGroup)
        {
            base.AddObject("SecurityGroups", securityGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemUsers(SystemUser systemUser)
        {
            base.AddObject("SystemUsers", systemUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Temps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemps(Temp temp)
        {
            base.AddObject("Temps", temp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UdListItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUdListItems(UdListItem udListItem)
        {
            base.AddObject("UdListItems", udListItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MenuItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenuItems(MenuItem menuItem)
        {
            base.AddObject("MenuItems", menuItem);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static Company CreateCompany(global::System.String companyID, global::System.Int64 autoID)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.AutoID = autoID;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyTypeID
        {
            get
            {
                return _CompanyTypeID;
            }
            set
            {
                OnCompanyTypeIDChanging(value);
                ReportPropertyChanging("CompanyTypeID");
                _CompanyTypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyTypeID");
                OnCompanyTypeIDChanged();
            }
        }
        private global::System.String _CompanyTypeID;
        partial void OnCompanyTypeIDChanging(global::System.String value);
        partial void OnCompanyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyCodeID
        {
            get
            {
                return _CompanyCodeID;
            }
            set
            {
                OnCompanyCodeIDChanging(value);
                ReportPropertyChanging("CompanyCodeID");
                _CompanyCodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyCodeID");
                OnCompanyCodeIDChanged();
            }
        }
        private global::System.String _CompanyCodeID;
        partial void OnCompanyCodeIDChanging(global::System.String value);
        partial void OnCompanyCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateTaxCode
        {
            get
            {
                return _StateTaxCode;
            }
            set
            {
                OnStateTaxCodeChanging(value);
                ReportPropertyChanging("StateTaxCode");
                _StateTaxCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateTaxCode");
                OnStateTaxCodeChanged();
            }
        }
        private global::System.String _StateTaxCode;
        partial void OnStateTaxCodeChanging(global::System.String value);
        partial void OnStateTaxCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxRegionCode
        {
            get
            {
                return _TaxRegionCode;
            }
            set
            {
                OnTaxRegionCodeChanging(value);
                ReportPropertyChanging("TaxRegionCode");
                _TaxRegionCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxRegionCode");
                OnTaxRegionCodeChanged();
            }
        }
        private global::System.String _TaxRegionCode;
        partial void OnTaxRegionCodeChanging(global::System.String value);
        partial void OnTaxRegionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentFiscalYear
        {
            get
            {
                return _CurrentFiscalYear;
            }
            set
            {
                OnCurrentFiscalYearChanging(value);
                ReportPropertyChanging("CurrentFiscalYear");
                _CurrentFiscalYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentFiscalYear");
                OnCurrentFiscalYearChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentFiscalYear;
        partial void OnCurrentFiscalYearChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentFiscalYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultExecutablePath
        {
            get
            {
                return _DefaultExecutablePath;
            }
            set
            {
                OnDefaultExecutablePathChanging(value);
                ReportPropertyChanging("DefaultExecutablePath");
                _DefaultExecutablePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultExecutablePath");
                OnDefaultExecutablePathChanged();
            }
        }
        private global::System.String _DefaultExecutablePath;
        partial void OnDefaultExecutablePathChanging(global::System.String value);
        partial void OnDefaultExecutablePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address3
        {
            get
            {
                return _Address3;
            }
            set
            {
                OnAddress3Changing(value);
                ReportPropertyChanging("Address3");
                _Address3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address3");
                OnAddress3Changed();
            }
        }
        private global::System.String _Address3;
        partial void OnAddress3Changing(global::System.String value);
        partial void OnAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNum
        {
            get
            {
                return _PhoneNum;
            }
            set
            {
                OnPhoneNumChanging(value);
                ReportPropertyChanging("PhoneNum");
                _PhoneNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNum");
                OnPhoneNumChanged();
            }
        }
        private global::System.String _PhoneNum;
        partial void OnPhoneNumChanging(global::System.String value);
        partial void OnPhoneNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNum2
        {
            get
            {
                return _PhoneNum2;
            }
            set
            {
                OnPhoneNum2Changing(value);
                ReportPropertyChanging("PhoneNum2");
                _PhoneNum2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNum2");
                OnPhoneNum2Changed();
            }
        }
        private global::System.String _PhoneNum2;
        partial void OnPhoneNum2Changing(global::System.String value);
        partial void OnPhoneNum2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNum
        {
            get
            {
                return _FaxNum;
            }
            set
            {
                OnFaxNumChanging(value);
                ReportPropertyChanging("FaxNum");
                _FaxNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FaxNum");
                OnFaxNumChanged();
            }
        }
        private global::System.String _FaxNum;
        partial void OnFaxNumChanging(global::System.String value);
        partial void OnFaxNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email2
        {
            get
            {
                return _Email2;
            }
            set
            {
                OnEmail2Changing(value);
                ReportPropertyChanging("Email2");
                _Email2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email2");
                OnEmail2Changed();
            }
        }
        private global::System.String _Email2;
        partial void OnEmail2Changing(global::System.String value);
        partial void OnEmail2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_DalItem_Company", "DalItems")]
        public EntityCollection<DalItem> DalItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DalItem>("MenuSecurityModel.FK_DalItem_Company", "DalItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DalItem>("MenuSecurityModel.FK_DalItem_Company", "DalItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_DalSecurity_Company", "DalSecurities")]
        public EntityCollection<DalSecurity> DalSecurities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DalSecurity>("MenuSecurityModel.FK_DalSecurity_Company", "DalSecurities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DalSecurity>("MenuSecurityModel.FK_DalSecurity_Company", "DalSecurities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_Image_Company", "DBStoredImages")]
        public EntityCollection<DBStoredImage> DBStoredImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DBStoredImage>("MenuSecurityModel.FK_Image_Company", "DBStoredImages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DBStoredImage>("MenuSecurityModel.FK_Image_Company", "DBStoredImages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItemCode_Company", "MenuItemCodes")]
        public EntityCollection<MenuItemCode> MenuItemCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItemCode>("MenuSecurityModel.FK_MenuItemCode_Company", "MenuItemCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItemCode>("MenuSecurityModel.FK_MenuItemCode_Company", "MenuItemCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItemType_Company", "MenuItemTypes")]
        public EntityCollection<MenuItemType> MenuItemTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItemType>("MenuSecurityModel.FK_MenuItemType_Company", "MenuItemTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItemType>("MenuSecurityModel.FK_MenuItemType_Company", "MenuItemTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuSecurity_Company", "MenuSecurities")]
        public EntityCollection<MenuSecurity> MenuSecurities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuSecurity>("MenuSecurityModel.FK_MenuSecurity_Company", "MenuSecurities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuSecurity>("MenuSecurityModel.FK_MenuSecurity_Company", "MenuSecurities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_SecurityGroup_Company", "SecurityGroups")]
        public EntityCollection<SecurityGroup> SecurityGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityGroup>("MenuSecurityModel.FK_SecurityGroup_Company", "SecurityGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityGroup>("MenuSecurityModel.FK_SecurityGroup_Company", "SecurityGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_UDListItem_Company", "UdListItems")]
        public EntityCollection<UdListItem> UdListItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UdListItem>("MenuSecurityModel.FK_UDListItem_Company", "UdListItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UdListItem>("MenuSecurityModel.FK_UDListItem_Company", "UdListItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItem_Company", "MenuItem")]
        public EntityCollection<MenuItem> MenuItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItem>("MenuSecurityModel.FK_MenuItem_Company", "MenuItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItem>("MenuSecurityModel.FK_MenuItem_Company", "MenuItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="DalItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DalItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DalItem object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="dalItemID">Initial value of the DalItemID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static DalItem CreateDalItem(global::System.String companyID, global::System.String dalItemID, global::System.Int64 autoID)
        {
            DalItem dalItem = new DalItem();
            dalItem.CompanyID = companyID;
            dalItem.DalItemID = dalItemID;
            dalItem.AutoID = autoID;
            return dalItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DalItemID
        {
            get
            {
                return _DalItemID;
            }
            set
            {
                if (_DalItemID != value)
                {
                    OnDalItemIDChanging(value);
                    ReportPropertyChanging("DalItemID");
                    _DalItemID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DalItemID");
                    OnDalItemIDChanged();
                }
            }
        }
        private global::System.String _DalItemID;
        partial void OnDalItemIDChanging(global::System.String value);
        partial void OnDalItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_DalItem_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_DalItem_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_DalItem_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_DalItem_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("MenuSecurityModel.FK_DalItem_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_DalSecurity_DalItem", "DalSecurities")]
        public EntityCollection<DalSecurity> DalSecurities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DalSecurity>("MenuSecurityModel.FK_DalSecurity_DalItem", "DalSecurities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DalSecurity>("MenuSecurityModel.FK_DalSecurity_DalItem", "DalSecurities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="DalSecurity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DalSecurity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DalSecurity object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="dalItemID">Initial value of the DalItemID property.</param>
        /// <param name="securityGroupID">Initial value of the SecurityGroupID property.</param>
        /// <param name="cRUDType">Initial value of the CRUDType property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static DalSecurity CreateDalSecurity(global::System.String companyID, global::System.String dalItemID, global::System.String securityGroupID, global::System.String cRUDType, global::System.Int64 autoID)
        {
            DalSecurity dalSecurity = new DalSecurity();
            dalSecurity.CompanyID = companyID;
            dalSecurity.DalItemID = dalItemID;
            dalSecurity.SecurityGroupID = securityGroupID;
            dalSecurity.CRUDType = cRUDType;
            dalSecurity.AutoID = autoID;
            return dalSecurity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DalItemID
        {
            get
            {
                return _DalItemID;
            }
            set
            {
                if (_DalItemID != value)
                {
                    OnDalItemIDChanging(value);
                    ReportPropertyChanging("DalItemID");
                    _DalItemID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DalItemID");
                    OnDalItemIDChanged();
                }
            }
        }
        private global::System.String _DalItemID;
        partial void OnDalItemIDChanging(global::System.String value);
        partial void OnDalItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityGroupID
        {
            get
            {
                return _SecurityGroupID;
            }
            set
            {
                if (_SecurityGroupID != value)
                {
                    OnSecurityGroupIDChanging(value);
                    ReportPropertyChanging("SecurityGroupID");
                    _SecurityGroupID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SecurityGroupID");
                    OnSecurityGroupIDChanged();
                }
            }
        }
        private global::System.String _SecurityGroupID;
        partial void OnSecurityGroupIDChanging(global::System.String value);
        partial void OnSecurityGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CRUDType
        {
            get
            {
                return _CRUDType;
            }
            set
            {
                if (_CRUDType != value)
                {
                    OnCRUDTypeChanging(value);
                    ReportPropertyChanging("CRUDType");
                    _CRUDType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CRUDType");
                    OnCRUDTypeChanged();
                }
            }
        }
        private global::System.String _CRUDType;
        partial void OnCRUDTypeChanging(global::System.String value);
        partial void OnCRUDTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_DalSecurity_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_DalSecurity_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_DalSecurity_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_DalSecurity_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("MenuSecurityModel.FK_DalSecurity_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_DalSecurity_DalItem", "DalItems")]
        public DalItem DalItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DalItem>("MenuSecurityModel.FK_DalSecurity_DalItem", "DalItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DalItem>("MenuSecurityModel.FK_DalSecurity_DalItem", "DalItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DalItem> DalItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DalItem>("MenuSecurityModel.FK_DalSecurity_DalItem", "DalItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DalItem>("MenuSecurityModel.FK_DalSecurity_DalItem", "DalItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_DalSecurity_SecurityGroup", "SecurityGroups")]
        public SecurityGroup SecurityGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroup>("MenuSecurityModel.FK_DalSecurity_SecurityGroup", "SecurityGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroup>("MenuSecurityModel.FK_DalSecurity_SecurityGroup", "SecurityGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityGroup> SecurityGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroup>("MenuSecurityModel.FK_DalSecurity_SecurityGroup", "SecurityGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityGroup>("MenuSecurityModel.FK_DalSecurity_SecurityGroup", "SecurityGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="DBStoredImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DBStoredImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DBStoredImage object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static DBStoredImage CreateDBStoredImage(global::System.String companyID, global::System.String imageID, global::System.Int64 autoID)
        {
            DBStoredImage dBStoredImage = new DBStoredImage();
            dBStoredImage.CompanyID = companyID;
            dBStoredImage.ImageID = imageID;
            dBStoredImage.AutoID = autoID;
            return dBStoredImage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.String _ImageID;
        partial void OnImageIDChanging(global::System.String value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] StoredImage
        {
            get
            {
                return StructuralObject.GetValidValue(_StoredImage);
            }
            set
            {
                OnStoredImageChanging(value);
                ReportPropertyChanging("StoredImage");
                _StoredImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoredImage");
                OnStoredImageChanged();
            }
        }
        private global::System.Byte[] _StoredImage;
        partial void OnStoredImageChanging(global::System.Byte[] value);
        partial void OnStoredImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_Image_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_Image_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_Image_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_Image_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("MenuSecurityModel.FK_Image_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItem_Image", "MenuItem")]
        public EntityCollection<MenuItem> MenuItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItem>("MenuSecurityModel.FK_MenuItem_Image", "MenuItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItem>("MenuSecurityModel.FK_MenuItem_Image", "MenuItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="MenuItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MenuItem object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="menuItemID">Initial value of the MenuItemID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static MenuItem CreateMenuItem(global::System.String companyID, global::System.String menuItemID, global::System.Int64 autoID)
        {
            MenuItem menuItem = new MenuItem();
            menuItem.CompanyID = companyID;
            menuItem.MenuItemID = menuItemID;
            menuItem.AutoID = autoID;
            return menuItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuItemID
        {
            get
            {
                return _MenuItemID;
            }
            set
            {
                if (_MenuItemID != value)
                {
                    OnMenuItemIDChanging(value);
                    ReportPropertyChanging("MenuItemID");
                    _MenuItemID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MenuItemID");
                    OnMenuItemIDChanged();
                }
            }
        }
        private global::System.String _MenuItemID;
        partial void OnMenuItemIDChanging(global::System.String value);
        partial void OnMenuItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MenuItemTypeID
        {
            get
            {
                return _MenuItemTypeID;
            }
            set
            {
                OnMenuItemTypeIDChanging(value);
                ReportPropertyChanging("MenuItemTypeID");
                _MenuItemTypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MenuItemTypeID");
                OnMenuItemTypeIDChanged();
            }
        }
        private global::System.String _MenuItemTypeID;
        partial void OnMenuItemTypeIDChanging(global::System.String value);
        partial void OnMenuItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MenuItemCodeID
        {
            get
            {
                return _MenuItemCodeID;
            }
            set
            {
                OnMenuItemCodeIDChanging(value);
                ReportPropertyChanging("MenuItemCodeID");
                _MenuItemCodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MenuItemCodeID");
                OnMenuItemCodeIDChanged();
            }
        }
        private global::System.String _MenuItemCodeID;
        partial void OnMenuItemCodeIDChanging(global::System.String value);
        partial void OnMenuItemCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                OnImageIDChanging(value);
                ReportPropertyChanging("ImageID");
                _ImageID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageID");
                OnImageIDChanged();
            }
        }
        private global::System.String _ImageID;
        partial void OnImageIDChanging(global::System.String value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentMenuID
        {
            get
            {
                return _ParentMenuID;
            }
            set
            {
                OnParentMenuIDChanging(value);
                ReportPropertyChanging("ParentMenuID");
                _ParentMenuID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentMenuID");
                OnParentMenuIDChanged();
            }
        }
        private global::System.String _ParentMenuID;
        partial void OnParentMenuIDChanging(global::System.String value);
        partial void OnParentMenuIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayOrder;
        partial void OnDisplayOrderChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Executable
        {
            get
            {
                return _Executable;
            }
            set
            {
                OnExecutableChanging(value);
                ReportPropertyChanging("Executable");
                _Executable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Executable");
                OnExecutableChanged();
            }
        }
        private Nullable<global::System.Boolean> _Executable;
        partial void OnExecutableChanging(Nullable<global::System.Boolean> value);
        partial void OnExecutableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExecutablePath
        {
            get
            {
                return _ExecutablePath;
            }
            set
            {
                OnExecutablePathChanging(value);
                ReportPropertyChanging("ExecutablePath");
                _ExecutablePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExecutablePath");
                OnExecutablePathChanged();
            }
        }
        private global::System.String _ExecutablePath;
        partial void OnExecutablePathChanging(global::System.String value);
        partial void OnExecutablePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExecutableProgram
        {
            get
            {
                return _ExecutableProgram;
            }
            set
            {
                OnExecutableProgramChanging(value);
                ReportPropertyChanging("ExecutableProgram");
                _ExecutableProgram = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExecutableProgram");
                OnExecutableProgramChanged();
            }
        }
        private global::System.String _ExecutableProgram;
        partial void OnExecutableProgramChanging(global::System.String value);
        partial void OnExecutableProgramChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideMenu
        {
            get
            {
                return _HideMenu;
            }
            set
            {
                OnHideMenuChanging(value);
                ReportPropertyChanging("HideMenu");
                _HideMenu = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideMenu");
                OnHideMenuChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideMenu;
        partial void OnHideMenuChanging(Nullable<global::System.Boolean> value);
        partial void OnHideMenuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AllowAll
        {
            get
            {
                return _AllowAll;
            }
            set
            {
                OnAllowAllChanging(value);
                ReportPropertyChanging("AllowAll");
                _AllowAll = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowAll");
                OnAllowAllChanged();
            }
        }
        private Nullable<global::System.Boolean> _AllowAll;
        partial void OnAllowAllChanging(Nullable<global::System.Boolean> value);
        partial void OnAllowAllChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItem_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuItem_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuItem_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuItem_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("MenuSecurityModel.FK_MenuItem_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItem_Image", "DBStoredImage")]
        public DBStoredImage DBStoredImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBStoredImage>("MenuSecurityModel.FK_MenuItem_Image", "DBStoredImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBStoredImage>("MenuSecurityModel.FK_MenuItem_Image", "DBStoredImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DBStoredImage> DBStoredImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBStoredImage>("MenuSecurityModel.FK_MenuItem_Image", "DBStoredImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DBStoredImage>("MenuSecurityModel.FK_MenuItem_Image", "DBStoredImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItem_MenuItemCode", "MenuItemCode")]
        public MenuItemCode MenuItemCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuItemCode>("MenuSecurityModel.FK_MenuItem_MenuItemCode", "MenuItemCode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuItemCode>("MenuSecurityModel.FK_MenuItem_MenuItemCode", "MenuItemCode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MenuItemCode> MenuItemCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuItemCode>("MenuSecurityModel.FK_MenuItem_MenuItemCode", "MenuItemCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MenuItemCode>("MenuSecurityModel.FK_MenuItem_MenuItemCode", "MenuItemCode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItem_MenuItemType", "MenuItemType")]
        public MenuItemType MenuItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuItemType>("MenuSecurityModel.FK_MenuItem_MenuItemType", "MenuItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuItemType>("MenuSecurityModel.FK_MenuItem_MenuItemType", "MenuItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MenuItemType> MenuItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuItemType>("MenuSecurityModel.FK_MenuItem_MenuItemType", "MenuItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MenuItemType>("MenuSecurityModel.FK_MenuItem_MenuItemType", "MenuItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuSecurity_MenuItem", "MenuSecurity")]
        public EntityCollection<MenuSecurity> MenuSecurities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuSecurity>("MenuSecurityModel.FK_MenuSecurity_MenuItem", "MenuSecurity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuSecurity>("MenuSecurityModel.FK_MenuSecurity_MenuItem", "MenuSecurity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="MenuItemCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuItemCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MenuItemCode object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="menuItemCodeID">Initial value of the MenuItemCodeID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static MenuItemCode CreateMenuItemCode(global::System.String companyID, global::System.String menuItemCodeID, global::System.Int64 autoID)
        {
            MenuItemCode menuItemCode = new MenuItemCode();
            menuItemCode.CompanyID = companyID;
            menuItemCode.MenuItemCodeID = menuItemCodeID;
            menuItemCode.AutoID = autoID;
            return menuItemCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuItemCodeID
        {
            get
            {
                return _MenuItemCodeID;
            }
            set
            {
                if (_MenuItemCodeID != value)
                {
                    OnMenuItemCodeIDChanging(value);
                    ReportPropertyChanging("MenuItemCodeID");
                    _MenuItemCodeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MenuItemCodeID");
                    OnMenuItemCodeIDChanged();
                }
            }
        }
        private global::System.String _MenuItemCodeID;
        partial void OnMenuItemCodeIDChanging(global::System.String value);
        partial void OnMenuItemCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItemCode_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuItemCode_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuItemCode_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuItemCode_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("MenuSecurityModel.FK_MenuItemCode_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItem_MenuItemCode", "MenuItem")]
        public EntityCollection<MenuItem> MenuItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItem>("MenuSecurityModel.FK_MenuItem_MenuItemCode", "MenuItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItem>("MenuSecurityModel.FK_MenuItem_MenuItemCode", "MenuItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="MenuItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MenuItemType object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="menuItemTypeID">Initial value of the MenuItemTypeID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static MenuItemType CreateMenuItemType(global::System.String companyID, global::System.String menuItemTypeID, global::System.Int64 autoID)
        {
            MenuItemType menuItemType = new MenuItemType();
            menuItemType.CompanyID = companyID;
            menuItemType.MenuItemTypeID = menuItemTypeID;
            menuItemType.AutoID = autoID;
            return menuItemType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuItemTypeID
        {
            get
            {
                return _MenuItemTypeID;
            }
            set
            {
                if (_MenuItemTypeID != value)
                {
                    OnMenuItemTypeIDChanging(value);
                    ReportPropertyChanging("MenuItemTypeID");
                    _MenuItemTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MenuItemTypeID");
                    OnMenuItemTypeIDChanged();
                }
            }
        }
        private global::System.String _MenuItemTypeID;
        partial void OnMenuItemTypeIDChanging(global::System.String value);
        partial void OnMenuItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItemType_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuItemType_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuItemType_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuItemType_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("MenuSecurityModel.FK_MenuItemType_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuItem_MenuItemType", "MenuItem")]
        public EntityCollection<MenuItem> MenuItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItem>("MenuSecurityModel.FK_MenuItem_MenuItemType", "MenuItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItem>("MenuSecurityModel.FK_MenuItem_MenuItemType", "MenuItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="MenuSecurity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuSecurity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MenuSecurity object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="menuItemID">Initial value of the MenuItemID property.</param>
        /// <param name="securityGroupID">Initial value of the SecurityGroupID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static MenuSecurity CreateMenuSecurity(global::System.String companyID, global::System.String menuItemID, global::System.String securityGroupID, global::System.Int64 autoID)
        {
            MenuSecurity menuSecurity = new MenuSecurity();
            menuSecurity.CompanyID = companyID;
            menuSecurity.MenuItemID = menuItemID;
            menuSecurity.SecurityGroupID = securityGroupID;
            menuSecurity.AutoID = autoID;
            return menuSecurity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuItemID
        {
            get
            {
                return _MenuItemID;
            }
            set
            {
                if (_MenuItemID != value)
                {
                    OnMenuItemIDChanging(value);
                    ReportPropertyChanging("MenuItemID");
                    _MenuItemID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MenuItemID");
                    OnMenuItemIDChanged();
                }
            }
        }
        private global::System.String _MenuItemID;
        partial void OnMenuItemIDChanging(global::System.String value);
        partial void OnMenuItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityGroupID
        {
            get
            {
                return _SecurityGroupID;
            }
            set
            {
                if (_SecurityGroupID != value)
                {
                    OnSecurityGroupIDChanging(value);
                    ReportPropertyChanging("SecurityGroupID");
                    _SecurityGroupID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SecurityGroupID");
                    OnSecurityGroupIDChanged();
                }
            }
        }
        private global::System.String _SecurityGroupID;
        partial void OnSecurityGroupIDChanging(global::System.String value);
        partial void OnSecurityGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuSecurity_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuSecurity_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuSecurity_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_MenuSecurity_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("MenuSecurityModel.FK_MenuSecurity_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuSecurity_SecurityGroup", "SecurityGroups")]
        public SecurityGroup SecurityGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroup>("MenuSecurityModel.FK_MenuSecurity_SecurityGroup", "SecurityGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroup>("MenuSecurityModel.FK_MenuSecurity_SecurityGroup", "SecurityGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityGroup> SecurityGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroup>("MenuSecurityModel.FK_MenuSecurity_SecurityGroup", "SecurityGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityGroup>("MenuSecurityModel.FK_MenuSecurity_SecurityGroup", "SecurityGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuSecurity_MenuItem", "MenuItem")]
        public MenuItem MenuItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuItem>("MenuSecurityModel.FK_MenuSecurity_MenuItem", "MenuItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuItem>("MenuSecurityModel.FK_MenuSecurity_MenuItem", "MenuItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MenuItem> MenuItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuItem>("MenuSecurityModel.FK_MenuSecurity_MenuItem", "MenuItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MenuItem>("MenuSecurityModel.FK_MenuSecurity_MenuItem", "MenuItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="SecurityGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityGroup object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="securityGroupID">Initial value of the SecurityGroupID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static SecurityGroup CreateSecurityGroup(global::System.String companyID, global::System.String securityGroupID, global::System.Int64 autoID)
        {
            SecurityGroup securityGroup = new SecurityGroup();
            securityGroup.CompanyID = companyID;
            securityGroup.SecurityGroupID = securityGroupID;
            securityGroup.AutoID = autoID;
            return securityGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityGroupID
        {
            get
            {
                return _SecurityGroupID;
            }
            set
            {
                if (_SecurityGroupID != value)
                {
                    OnSecurityGroupIDChanging(value);
                    ReportPropertyChanging("SecurityGroupID");
                    _SecurityGroupID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SecurityGroupID");
                    OnSecurityGroupIDChanged();
                }
            }
        }
        private global::System.String _SecurityGroupID;
        partial void OnSecurityGroupIDChanging(global::System.String value);
        partial void OnSecurityGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityGroupTypeID
        {
            get
            {
                return _SecurityGroupTypeID;
            }
            set
            {
                OnSecurityGroupTypeIDChanging(value);
                ReportPropertyChanging("SecurityGroupTypeID");
                _SecurityGroupTypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityGroupTypeID");
                OnSecurityGroupTypeIDChanged();
            }
        }
        private global::System.String _SecurityGroupTypeID;
        partial void OnSecurityGroupTypeIDChanging(global::System.String value);
        partial void OnSecurityGroupTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityGroupCodeID
        {
            get
            {
                return _SecurityGroupCodeID;
            }
            set
            {
                OnSecurityGroupCodeIDChanging(value);
                ReportPropertyChanging("SecurityGroupCodeID");
                _SecurityGroupCodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityGroupCodeID");
                OnSecurityGroupCodeIDChanged();
            }
        }
        private global::System.String _SecurityGroupCodeID;
        partial void OnSecurityGroupCodeIDChanging(global::System.String value);
        partial void OnSecurityGroupCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_SecurityGroup_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_SecurityGroup_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_SecurityGroup_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_SecurityGroup_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("MenuSecurityModel.FK_SecurityGroup_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_DalSecurity_SecurityGroup", "DalSecurities")]
        public EntityCollection<DalSecurity> DalSecurities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DalSecurity>("MenuSecurityModel.FK_DalSecurity_SecurityGroup", "DalSecurities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DalSecurity>("MenuSecurityModel.FK_DalSecurity_SecurityGroup", "DalSecurities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_MenuSecurity_SecurityGroup", "MenuSecurities")]
        public EntityCollection<MenuSecurity> MenuSecurities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuSecurity>("MenuSecurityModel.FK_MenuSecurity_SecurityGroup", "MenuSecurities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuSecurity>("MenuSecurityModel.FK_MenuSecurity_SecurityGroup", "MenuSecurities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="SystemUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemUser object.
        /// </summary>
        /// <param name="systemUserID">Initial value of the SystemUserID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static SystemUser CreateSystemUser(global::System.String systemUserID, global::System.Int64 autoID)
        {
            SystemUser systemUser = new SystemUser();
            systemUser.SystemUserID = systemUserID;
            systemUser.AutoID = autoID;
            return systemUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SystemUserID
        {
            get
            {
                return _SystemUserID;
            }
            set
            {
                if (_SystemUserID != value)
                {
                    OnSystemUserIDChanging(value);
                    ReportPropertyChanging("SystemUserID");
                    _SystemUserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SystemUserID");
                    OnSystemUserIDChanged();
                }
            }
        }
        private global::System.String _SystemUserID;
        partial void OnSystemUserIDChanging(global::System.String value);
        partial void OnSystemUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemUserTypeID
        {
            get
            {
                return _SystemUserTypeID;
            }
            set
            {
                OnSystemUserTypeIDChanging(value);
                ReportPropertyChanging("SystemUserTypeID");
                _SystemUserTypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemUserTypeID");
                OnSystemUserTypeIDChanged();
            }
        }
        private global::System.String _SystemUserTypeID;
        partial void OnSystemUserTypeIDChanging(global::System.String value);
        partial void OnSystemUserTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemUserCodeID
        {
            get
            {
                return _SystemUserCodeID;
            }
            set
            {
                OnSystemUserCodeIDChanging(value);
                ReportPropertyChanging("SystemUserCodeID");
                _SystemUserCodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemUserCodeID");
                OnSystemUserCodeIDChanged();
            }
        }
        private global::System.String _SystemUserCodeID;
        partial void OnSystemUserCodeIDChanging(global::System.String value);
        partial void OnSystemUserCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PasswordExpired
        {
            get
            {
                return _PasswordExpired;
            }
            set
            {
                OnPasswordExpiredChanging(value);
                ReportPropertyChanging("PasswordExpired");
                _PasswordExpired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordExpired");
                OnPasswordExpiredChanged();
            }
        }
        private Nullable<global::System.Boolean> _PasswordExpired;
        partial void OnPasswordExpiredChanging(Nullable<global::System.Boolean> value);
        partial void OnPasswordExpiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordExpiresOn
        {
            get
            {
                return _PasswordExpiresOn;
            }
            set
            {
                OnPasswordExpiresOnChanging(value);
                ReportPropertyChanging("PasswordExpiresOn");
                _PasswordExpiresOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordExpiresOn");
                OnPasswordExpiresOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordExpiresOn;
        partial void OnPasswordExpiresOnChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordExpiresOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SystemManager
        {
            get
            {
                return _SystemManager;
            }
            set
            {
                OnSystemManagerChanging(value);
                ReportPropertyChanging("SystemManager");
                _SystemManager = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemManager");
                OnSystemManagerChanged();
            }
        }
        private Nullable<global::System.Boolean> _SystemManager;
        partial void OnSystemManagerChanging(Nullable<global::System.Boolean> value);
        partial void OnSystemManagerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultCompanyID
        {
            get
            {
                return _DefaultCompanyID;
            }
            set
            {
                OnDefaultCompanyIDChanging(value);
                ReportPropertyChanging("DefaultCompanyID");
                _DefaultCompanyID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultCompanyID");
                OnDefaultCompanyIDChanged();
            }
        }
        private global::System.String _DefaultCompanyID;
        partial void OnDefaultCompanyIDChanging(global::System.String value);
        partial void OnDefaultCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultPlantID
        {
            get
            {
                return _DefaultPlantID;
            }
            set
            {
                OnDefaultPlantIDChanging(value);
                ReportPropertyChanging("DefaultPlantID");
                _DefaultPlantID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultPlantID");
                OnDefaultPlantIDChanged();
            }
        }
        private global::System.String _DefaultPlantID;
        partial void OnDefaultPlantIDChanging(global::System.String value);
        partial void OnDefaultPlantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private global::System.String _AddressID;
        partial void OnAddressIDChanging(global::System.String value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="Temp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Temp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Temp object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Temp CreateTemp(global::System.Int64 id)
        {
            Temp temp = new Temp();
            temp.ID = id;
            return temp;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Bool_1
        {
            get
            {
                return _Bool_1;
            }
            set
            {
                OnBool_1Changing(value);
                ReportPropertyChanging("Bool_1");
                _Bool_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bool_1");
                OnBool_1Changed();
            }
        }
        private Nullable<global::System.Boolean> _Bool_1;
        partial void OnBool_1Changing(Nullable<global::System.Boolean> value);
        partial void OnBool_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortChar_1
        {
            get
            {
                return _ShortChar_1;
            }
            set
            {
                OnShortChar_1Changing(value);
                ReportPropertyChanging("ShortChar_1");
                _ShortChar_1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortChar_1");
                OnShortChar_1Changed();
            }
        }
        private global::System.String _ShortChar_1;
        partial void OnShortChar_1Changing(global::System.String value);
        partial void OnShortChar_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Int_1
        {
            get
            {
                return _Int_1;
            }
            set
            {
                OnInt_1Changing(value);
                ReportPropertyChanging("Int_1");
                _Int_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Int_1");
                OnInt_1Changed();
            }
        }
        private Nullable<global::System.Int32> _Int_1;
        partial void OnInt_1Changing(Nullable<global::System.Int32> value);
        partial void OnInt_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Decimal_1
        {
            get
            {
                return _Decimal_1;
            }
            set
            {
                OnDecimal_1Changing(value);
                ReportPropertyChanging("Decimal_1");
                _Decimal_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Decimal_1");
                OnDecimal_1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Decimal_1;
        partial void OnDecimal_1Changing(Nullable<global::System.Decimal> value);
        partial void OnDecimal_1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MenuSecurityModel", Name="UdListItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UdListItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UdListItem object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="udListID">Initial value of the UdListID property.</param>
        /// <param name="uDListItemID">Initial value of the UDListItemID property.</param>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        public static UdListItem CreateUdListItem(global::System.String companyID, global::System.String udListID, global::System.String uDListItemID, global::System.Int64 autoID)
        {
            UdListItem udListItem = new UdListItem();
            udListItem.CompanyID = companyID;
            udListItem.UdListID = udListID;
            udListItem.UDListItemID = uDListItemID;
            udListItem.AutoID = autoID;
            return udListItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.String _CompanyID;
        partial void OnCompanyIDChanging(global::System.String value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UdListID
        {
            get
            {
                return _UdListID;
            }
            set
            {
                if (_UdListID != value)
                {
                    OnUdListIDChanging(value);
                    ReportPropertyChanging("UdListID");
                    _UdListID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UdListID");
                    OnUdListIDChanged();
                }
            }
        }
        private global::System.String _UdListID;
        partial void OnUdListIDChanging(global::System.String value);
        partial void OnUdListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UDListItemID
        {
            get
            {
                return _UDListItemID;
            }
            set
            {
                if (_UDListItemID != value)
                {
                    OnUDListItemIDChanging(value);
                    ReportPropertyChanging("UDListItemID");
                    _UDListItemID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UDListItemID");
                    OnUDListItemIDChanged();
                }
            }
        }
        private global::System.String _UDListItemID;
        partial void OnUDListItemIDChanging(global::System.String value);
        partial void OnUDListItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                OnAutoIDChanging(value);
                ReportPropertyChanging("AutoID");
                _AutoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoID");
                OnAutoIDChanged();
            }
        }
        private global::System.Int64 _AutoID;
        partial void OnAutoIDChanging(global::System.Int64 value);
        partial void OnAutoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MenuSecurityModel", "FK_UDListItem_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_UDListItem_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_UDListItem_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("MenuSecurityModel.FK_UDListItem_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("MenuSecurityModel.FK_UDListItem_Company", "Companies", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
